<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
//const int MAX = 2;
int zapalky[8][8] = {{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0},{0,0,0,0,0,0,0,0}};
int pocet_zapalek = 0;
int vezmi = 0; // 0-7 row, 8-15 column
int row;
int column;
broadcast chan hral_hrac1;
broadcast chan hral_hrac2;

bool isMoveOk() {
	int sum = 0;

	if (vezmi &lt;0 || vezmi &gt;15) {
		return false;
	}

	if (vezmi&lt;8) {
		for (i:int[0,7]) {
			sum += zapalky[vezmi][i];
		}
	} else {
		for (i:int[0,7]) {
			sum += zapalky[i][vezmi-8];
		}
	}
	return sum!=0;
}

bool isEnd() {
	int sum = 0;
	for (i:int[0,7]) {
		for (j:int[0,7]) {
			sum += zapalky[i][j];
		}
	}
	return sum==0;
}

void findMove() {
	for (i:int[0,15]) {
		vezmi = i;
		if (isMoveOk()) {
			return;
		}
	}
}

int rockPerMove(int tah) {
	int pocet = 0;
	if (tah&lt;8) {
		for (i:int[0,7]) {
			pocet += zapalky[tah][i];
		}
	} else {
		for (i:int[0,7]) {
			pocet += zapalky[i][tah-8];
		}
	}
	return pocet;
}

void findGoodMove() {
	int hodnota;
	if (pocet_zapalek % 2 == 0) {
		// hledani tahu, ktery ubere sudy pocet kamenu a zachova sudy pocet
		for (i:int[0,15]) {
			hodnota = rockPerMove(i);
			if (hodnota &gt; 0 &amp;&amp; hodnota % 2 == 0) {
				vezmi = i;
				return;
			}
		}
	} else {
		// hledani tahu, ktery ubere lichy pocet kamenu
		for (i:int[0,15]) {
			hodnota = rockPerMove(i);	
			if (hodnota &gt; 0 &amp;&amp; hodnota % 2 == 1) {
				vezmi = i;
				return;
			}
		}
	}
	// nebyl nalezen vhodny tah, prohra je jista
	findMove();
	return;
}

void updateBoard() {
	if (zapalky[row][column] != 1)
		pocet_zapalek ++;
	zapalky[row][column] = 1;
}

bool isBoardOk() {
	return pocet_zapalek &gt; 3;
}</declaration><template><name x="5" y="5">hra_nim</name><parameter>int &amp;zapalky[8][8], int &amp;vezmi, broadcast chan &amp;hraje_hrac1, broadcast chan &amp;hraje_hrac2</parameter><declaration>// Place local declarations here.

void doMove() {
	int pocet = 0;
	if (vezmi&lt;8) {
		for (i:int[0,7]) {
			pocet += zapalky[vezmi][i];
			zapalky[vezmi][i] = 0;
		}
	} else {
		for (i:int[0,7]) {
			pocet += zapalky[i][vezmi-8];
			zapalky[i][vezmi-8] = 0;
		}
	}
	pocet_zapalek -= pocet;
}</declaration><location id="id0" x="-480" y="-264"><name x="-464" y="-272">BOARD_READY</name></location><location id="id1" x="-480" y="-344"><urgent/></location><location id="id2" x="-480" y="-520"><urgent/></location><location id="id3" x="-736" y="24"><name x="-912" y="-8">NEKOREKTNI_TAH_hrace2</name></location><location id="id4" x="-736" y="-200"><name x="-904" y="-240">NEKOREKTNI_TAH_hrace1</name></location><location id="id5" x="-224" y="24"><name x="-248" y="40">ZVITEZIL_hrac1</name></location><location id="id6" x="-224" y="-200"><name x="-256" y="-240">ZVITEZIL_hrac2</name></location><location id="id7" x="-480" y="24"><urgent/></location><location id="id8" x="-480" y="-200"><urgent/></location><location id="id9" x="-480" y="-608"><urgent/></location><init ref="id9"/><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="-472" y="-328">isBoardOk()</label></transition><transition><source ref="id0"/><target ref="id8"/><label kind="synchronisation" x="-512" y="-248">hraje_hrac2!</label></transition><transition><source ref="id9"/><target ref="id2"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="select" x="-576" y="-512">i : int[0,7],
j : int[0,7]</label><label kind="assignment" x="-576" y="-448">row = i,
column = j,
updateBoard()</label></transition><transition><source ref="id1"/><target ref="id2"/><label kind="guard" x="-376" y="-408">!isBoardOk()</label><nail x="-344" y="-440"/></transition><transition><source ref="id6"/><target ref="id6"/><nail x="-240" y="-192"/><nail x="-240" y="-168"/><nail x="-208" y="-176"/></transition><transition><source ref="id4"/><target ref="id4"/><nail x="-760" y="-176"/><nail x="-720" y="-168"/></transition><transition><source ref="id3"/><target ref="id3"/><nail x="-760" y="48"/><nail x="-728" y="48"/></transition><transition><source ref="id5"/><target ref="id5"/><nail x="-232" y="0"/><nail x="-208" y="-8"/></transition><transition><source ref="id7"/><target ref="id3"/><label kind="guard" x="-680" y="56">!isMoveOk()</label><label kind="synchronisation" x="-680" y="32">hraje_hrac2?</label></transition><transition><source ref="id8"/><target ref="id4"/><label kind="guard" x="-680" y="-224">!isMoveOk()</label><label kind="synchronisation" x="-680" y="-248">hraje_hrac1?</label></transition><transition><source ref="id8"/><target ref="id6"/><label kind="guard" x="-352" y="-224">isEnd()</label></transition><transition><source ref="id7"/><target ref="id5"/><label kind="guard" x="-360" y="32">isEnd()</label></transition><transition><source ref="id7"/><target ref="id8"/><label kind="guard" x="-360" y="-96">isMoveOk()</label><label kind="synchronisation" x="-360" y="-120">hraje_hrac2?</label><label kind="assignment" x="-360" y="-72">doMove()</label><nail x="-368" y="-24"/><nail x="-368" y="-152"/></transition><transition><source ref="id8"/><target ref="id7"/><label kind="guard" x="-680" y="-96">isMoveOk()</label><label kind="synchronisation" x="-680" y="-120">hraje_hrac1?</label><label kind="assignment" x="-680" y="-72">doMove()</label><nail x="-592" y="-152"/><nail x="-592" y="-24"/></transition></template><template><name>nedeterministicky_hrac</name><parameter>int &amp;zapalky[8][8], broadcast chan &amp;hral_oponent, int &amp;vezmi, broadcast chan &amp;hraju</parameter><location id="id10" x="0" y="0"><name x="16" y="-32">NASEL_TAH</name></location><location id="id11" x="0" y="-352"><name x="-10" y="-382">HLEDA_TAH</name></location><location id="id12" x="-320" y="-192"><name x="-344" y="-224">CEKA</name></location><init ref="id12"/><transition><source ref="id11"/><target ref="id10"/><label kind="guard" x="-60" y="-206">!isEnd()</label><label kind="assignment" x="-72" y="-176">findMove()</label></transition><transition><source ref="id10"/><target ref="id12"/><label kind="synchronisation" x="-208" y="-88">hraju!</label></transition><transition><source ref="id12"/><target ref="id11"/><label kind="synchronisation" x="-232" y="-304">hral_oponent?</label></transition></template><template><name>deterministicky_hrac</name><parameter>int &amp;zapalky[8][8], broadcast chan &amp;hral_oponent, int &amp;vezmi, broadcast chan &amp;hraju</parameter><location id="id13" x="-72" y="128"><name x="-56" y="104">NASEL_TAH</name></location><location id="id14" x="-72" y="-256"><name x="-82" y="-286">HLEDA_TAH</name></location><location id="id15" x="-392" y="-64"><name x="-424" y="-96">CEKA</name></location><init ref="id15"/><transition><source ref="id14"/><target ref="id13"/><label kind="guard" x="-132" y="-94">!isEnd()</label><label kind="assignment" x="-64" y="-80">findGoodMove()</label></transition><transition><source ref="id13"/><target ref="id15"/><label kind="synchronisation" x="-296" y="24">hraju!</label></transition><transition><source ref="id15"/><target ref="id14"/><label kind="synchronisation" x="-320" y="-192">hral_oponent?</label></transition></template><system>// Place template instantiations here.
hrac1 = deterministicky_hrac(zapalky, hral_hrac2, vezmi, hral_hrac1);
hrac2 = nedeterministicky_hrac(zapalky, hral_hrac1, vezmi, hral_hrac2);
hra = hra_nim(zapalky, vezmi, hral_hrac1, hral_hrac2);

// List one or more processes to be composed into a system.
system hra, hrac1, hrac2;</system></nta>
